{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","offset","autoOff","step","props","frameSize","itemWidth","animationDuration","newOffsetRight","visibleOffset","this","setState","newOffsetLeft","Math","min","event","currentTarget","checked","images","infinite","newFrameSize","floor","length","setTimeout","offsetRight","className","style","width","transform","map","img","src","alt","type","onClick","offsetLeft","id","autoOffset","htmlFor","placeholder","onChange","value","max","Component","App","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ead6d317.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\nexport class Carousel extends Component<Props, {}> {\n  state = {\n    offset: 0,\n    autoOff: false,\n    step: this.props.step,\n    frameSize: this.props.frameSize,\n    itemWidth: this.props.itemWidth,\n    animationDuration: this.props.animationDuration,\n  };\n\n  offsetRight(newOffsetRight: number, visibleOffset: number) {\n    this.setState({\n      offset: newOffsetRight < -visibleOffset ? 0 : newOffsetRight,\n    });\n  }\n\n  offsetLeft(newOffsetLeft: number) {\n    this.setState({ offset: Math.min(newOffsetLeft, 0) });\n  }\n\n  autoOffset(event: React.MouseEvent<HTMLInputElement>) {\n    this.setState({ autoOff: event.currentTarget.checked });\n  }\n\n  render() {\n    const {\n      images,\n      infinite,\n    } = this.props;\n    const {\n      offset,\n      step = 3,\n      frameSize = 3,\n      itemWidth = 130,\n      animationDuration = 1000,\n    } = this.state;\n    const newFrameSize = frameSize * itemWidth;\n    const newOffsetRight = offset - step * itemWidth;\n    const newOffsetLeft = offset + step * itemWidth;\n    const visibleOffset = Math.floor(images.length / frameSize) * newFrameSize;\n\n    // if (newOffsetRight - itemWidth < -visibleOffset) {\n    //   this.setState({ offset: 0 });\n    // }\n\n    // console.log(newOffsetLeft, newOffsetRight - itemWidth, visibleOffset);\n\n    if (this.state.autoOff || infinite) {\n      setTimeout(() => {\n        this.offsetRight(newOffsetRight, visibleOffset);\n      }, animationDuration);\n    }\n\n    return (\n      <>\n        <div\n          className=\"Carousel\"\n          style={{\n            width: `${itemWidth * images.length}px`,\n          }}\n        >\n          <div\n            className=\"Carousel__window\"\n            style={{ width: newFrameSize }}\n          >\n            <ul\n              className=\"Carousel__list\"\n              style={{\n                transform: `translateX(${offset}px)`,\n              }}\n            >\n              { images.map((img) => (\n                <li key={`li_${img}`}>\n                  <img\n                    key={img}\n                    src={img}\n                    alt=\"1\"\n                    width={itemWidth}\n                  />\n                </li>\n              )) }\n            </ul>\n          </div>\n        </div>\n        <div className=\"Buttons\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.offsetLeft(newOffsetLeft);\n            }}\n          >\n            Prev\n          </button>\n          <button\n            data-cy=\"next\"\n            type=\"button\"\n            onClick={() => {\n              this.offsetRight(newOffsetRight, visibleOffset);\n            }}\n          >\n            Next\n          </button>\n          <input\n            type=\"checkbox\"\n            id=\"autoScroll\"\n            onClick={(event) => {\n              this.autoOffset(event);\n            }}\n          />\n          <label htmlFor=\"autoScroll\"> Auto scroll</label>\n        </div>\n        <div className=\"SettingsCarousel box\">\n          <form className=\"SettingsCarousel\">\n            <label htmlFor=\"itemId\">\n              Item width\n              <input\n                id=\"itemId\"\n                type=\"number\"\n                placeholder=\"130\"\n                className=\"SettingsCarousel__field\"\n                onChange={(event) => {\n                  this.setState({ itemWidth: event.currentTarget.value });\n                }}\n                min={0}\n              />\n            </label>\n\n            <label htmlFor=\"frameId\">\n              Frame size\n              <input\n                id=\"frameId\"\n                type=\"number\"\n                placeholder=\"3\"\n                className=\"SettingsCarousel__field\"\n                onChange={(event) => {\n                  this.setState({ frameSize: event.currentTarget.value });\n                }}\n                max={images.length}\n                min={0}\n              />\n            </label>\n\n            <label htmlFor=\"stepId\">\n              Step\n              <input\n                id=\"stepId\"\n                type=\"number\"\n                placeholder=\"3\"\n                className=\"SettingsCarousel__field\"\n                onChange={(event) => {\n                  this.setState({ step: event.currentTarget.value });\n                }}\n                max={images.length}\n                min={0}\n              />\n            </label>\n\n            Animation duration\n            <input\n              type=\"number\"\n              placeholder=\"1000\"\n              className=\"SettingsCarousel__field\"\n              onChange={(event) => {\n                this.setState({ animationDuration: event.currentTarget.value });\n              }}\n              min={0}\n            />\n          </form>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={3}\n          frameSize={3}\n          itemWidth={130}\n          animationDuration={1000}\n          infinite={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}